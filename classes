class software_company:
    def java(self):
        print('there are 10 jeva developers are working in company')
    def dotnet(self):
        print('there are 15 dotnet developers are working in company')
    def python(self):
        print('there are 20 python developers are working in company')
dev1=software_company()
dev2=software_company()
dev3=software_company()
print('the following are the types of individuals')
print(type(dev1))
print(type(dev2))
print(type(dev3))
print()
software_company.java(dev1)
software_company.dotnet(dev2)
software_company.python(dev3)

dev1.java()
dev2.dotnet()
dev3.python()

output:
/home/ansible-practice/PycharmProjects/test/venv/bin/python /home/ansible-practice/PycharmProjects/test/2.py
the following are the types of individuals
<class '__main__.software_company'>
<class '__main__.software_company'>
<class '__main__.software_company'>

there are 10 jeva developers are working in company
there are 15 dotnet developers are working in company
there are 20 python developers are working in company
there are 10 jeva developers are working in company
there are 15 dotnet developers are working in company
there are 20 python developers are working in company

Process finished with exit code 0
==========================================================
class computer:
    def config(self):
        print("i5, 16gb, 1TB")
com1=computer()
com2=computer()
print(type(com1))
print(type(com2))

computer.config(com1)
computer.config(com2)
com1.config()
com2.config()

output:
/home/ansible-practice/PycharmProjects/test/venv/bin/python /home/ansible-practice/PycharmProjects/test/1.py
<class '__main__.computer'>
<class '__main__.computer'>
i5, 16gb, 1TB
i5, 16gb, 1TB
i5, 16gb, 1TB
i5, 16gb, 1TB

Process finished with exit code 0
==========================================
if we add variables?attributes also..
======================================================
class computer:
    def __init__(self):
        print('this is init function')
    def config(self):
        print("config is ")
com1=computer()
com2=computer()
print(type(com1))
print(type(com2))

output:
/home/ansible-practice/PycharmProjects/test/venv/bin/python /home/ansible-practice/PycharmProjects/test/1.py
this is init function
this is init function
<class '__main__.computer'>
<class '__main__.computer'>

Process finished with exit code 0
====================================================
#actually we are not calling init function anywhere in the programm, this is speciality here.#


class computer:
    def __init__(self,cpu,ram):
        self.cpu=cpu
        self.ram=ram

    def config(self):
        print("config is ",self.cpu,self.ram)
com1=computer('i5','16gb')
com2=computer('i7','3 20gb')
print(type(com1))
print(type(com2))

computer.config(com1)
computer.config(com2)


com1.config()
com2.config()

OUTPUT:
/home/ansible-practice/PycharmProjects/test/venv/bin/python /home/ansible-practice/PycharmProjects/test/1.py
<class '__main__.computer'>
<class '__main__.computer'>
config is  i5 16gb
config is  i7 3 20gb
config is  i5 16gb
config is  i7 3 20gb

Process finished with exit code 0
